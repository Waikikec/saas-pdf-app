// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id String @id @unique
  email String @unique

  File File[]
  Message Message[]

  stripeCustomerId String? @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId String? @unique @map(name: "stripe_subscription_id")
  stripePriceId String? @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_id")
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id String @id @default(cuid())
  name String

  uploadStatus UploadStatus @default(PENDING)

  url String
  key String
  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User User? @relation(fields: [userId], references: [id])
  userId String?

  @@index([userId])
}

model Message {
  id String @id @default(cuid())
  text String @db.Text()

  isUserMessage Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //automatically created by Prisma formatting
  User User? @relation(fields: [userId], references: [id])
  userId String?

  File File? @relation(fields: [fileId], references: [id])
  fileId String?

  @@index([userId])
  @@index([fileId])
}

//NOTE: every time you made changes on Prisma schema
// 1) to update cloud db, execute following command: npx prisma db push
// 2) to update local typescript types, execute following command: npx prisma generate